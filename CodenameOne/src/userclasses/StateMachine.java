/**
 * Your application code goes here<br>
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
package userclasses;

import ch.bbbaden.m335.memories.MyApplication;
import com.codename1.capture.Capture;
import com.codename1.components.MultiButton;
import com.codename1.components.SpanLabel;
import com.codename1.ext.filechooser.FileChooser;
import com.codename1.io.File;
import com.codename1.io.FileSystemStorage;
import com.codename1.io.Log;
import com.codename1.io.Util;
import com.codename1.l10n.SimpleDateFormat;
import com.codename1.media.Media;
import com.codename1.media.MediaManager;
import com.codename1.notifications.LocalNotification;
import generated.StateMachineBase;
import com.codename1.ui.*;
import com.codename1.ui.events.*;
import com.codename1.ui.util.Resources;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.Date;

/**
 *
 * @author Your name here
 */
public class StateMachine extends StateMachineBase {
    private ArrayList<Memory> Memories = new ArrayList<>();

    public StateMachine(String resFile) {
        super(resFile);
        // do not modify, write code in initVars and initialize class members there,
        // the constructor might be invoked too late due to race conditions that might occur
    }

    /**
     * this method should be used to initialize variables instead of the
     * constructor/class scope to avoid race conditions
     */
    protected void initVars(Resources res) {
    }

    @Override
    protected void onMain_BtnLaunchCameraAction(Component c, ActionEvent event) {
        String i = Capture.capturePhoto();
        if (i != null) {
            Image img = null;
            try {
                img = Image.createImage(i);
            } catch (IOException ex) {
                System.out.println("ex = " + ex);
            }
            findImageViewer().setImage(img);
        }

    }

    @Override
    protected void onMain_BtnChooseImageAction(Component c, ActionEvent event) {
        Form current = MyApplication.getCurrent();
        if (FileChooser.isAvailable()) {
            FileChooser.showOpenDialog(".pdf,application/pdf,.gif,image/gif,.png,image/png,.jpg,image/jpg,.tif,image/tif,.jpeg,.bmp", e2 -> {
                if (e2 != null && e2.getSource() != null) {
                    String file = (String) e2.getSource();
                    try {
                        Image img = Image.createImage(file);
                        current.add(new Label(img));
                        if (true) {
                            return;
                        }
                    } catch (Exception ex) {
                        Log.e(ex);
                    }
                }
            });
        }
    }

    @Override
    protected void onMain_BtnRecordAction(Component c, ActionEvent event) {
        FileSystemStorage fs = FileSystemStorage.getInstance();
        String recordingsDir = fs.getAppHomePath() + "recordings/";
        fs.mkdir(recordingsDir);
        try {
            for (String file : fs.listFiles(recordingsDir)) {
                MultiButton mb = new MultiButton(file.substring(file.lastIndexOf("/") + 1));
                mb.addActionListener((e) -> {
                    try {
                        Media m = MediaManager.createMedia(recordingsDir + file, false);
                        m.play();
                    } catch (IOException err) {
                        Log.e(err);
                    }
                });
                MyApplication.getCurrent().add(mb);
            }
            try {
                String file = Capture.captureAudio();
                if (file != null) {
                    SimpleDateFormat sd = new SimpleDateFormat("yyyy-MMM-dd-kk-mm");
                    String fileName = sd.format(new Date());
                    String filePath = recordingsDir + fileName;
                    Util.copy(fs.openInputStream(file), fs.openOutputStream(filePath));
                    MultiButton mb = new MultiButton(fileName);
                    mb.addActionListener((e) -> {
                        try {
                            Media m = MediaManager.createMedia(filePath, false);
                            m.play();
                        } catch (IOException err) {
                            Log.e(err);
                        }
                    });
                    MyApplication.getCurrent().add(mb);
                    MyApplication.getCurrent().revalidate();
                }
            } catch (IOException err) {
                Log.e(err);
            }

        } catch (IOException err) {
            Log.e(err);
        }

    }

    @Override
    protected void onMain_BtnNewNoteAction(Component c, ActionEvent event) {
        Form form = new Form("New Note");
        TextField title = new TextField("Title...");
        TextArea text = new TextArea("Write your Note here...");
        form.add(title);
        form.add(text);
        Button save = new Button("Save");
        form.add(save);
        form.show();
        save.addActionListener(e->{
            Note note = new Note();
            if(!title.getText().equals("")){
                note.setTitle(title.getText());
            }
            if(!text.getText().equals("")){
                note.setText(text.getText());
            }
        });
        form.setHidden(true);
    }
}
